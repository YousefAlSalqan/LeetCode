class Solution {
    public int[] searchRange(int[] nums, int target) 
    {
        int[] newArray = new int[2]; 
        newArray[0] = firstElement(nums,target); 
        newArray[1] = rightElement(nums,target); 
        return newArray;
    }
    private int firstElement(int[] nums, int target)
    {
        int left = 0; 
        int right = nums.length-1; 
        int mid = left + (right-left)/2; 
        while (left<=right)
        {
            mid = left + (right-left)/2;
            if (nums[mid]<target)
            {
                left = mid + 1; 
            }
            else 
            {
                right = mid - 1; 
            }
        }
        if (left<nums.length && nums[left] == target)
        {
            return left;
        }
        return -1; 
    }

    private int rightElement(int[] nums, int target)
    {
        int left = 0; 
        int right = nums.length-1; 
        int mid = left + (right-left)/2; 
        while (left<=right)
        {
            mid = left + (right-left)/2;
            if (nums[mid]<=target)
            {
                left = mid + 1; 
            }
            else 
            {
                right = mid - 1; 
            }
        }
        if (right>=0 && nums[right] == target)
        {
            return right;
        }
        return -1; 
    }
}
